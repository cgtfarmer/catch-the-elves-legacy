& get catching mechanics working as intended
& get n elves generating
& adapt everything to n elves
	& make sure removal uses arr.splice(spot, 1) so there's no holes in the array
& make canvas bigger
& get elves starting with random spawn location
& make it so spacebar can't be held down
& roll elf colors randomly between blue, black, orange, green, whatever
& refactor elf motion and fix starting pause
& Add 3/10 kind of counter
& get timer converting to minutes/hours?
& main menu - easy, medium, hard - just made buttons for now
& get instructions at bottom
& get CSS going so things look nice
& add orange as elf color
& center player1 on game start
& add border around elves/player to make them easier to see
& change name of this project, take old multiplayer notes and move them to the actual multiplayer project
& use current settings with 10 elves for "hard mode"?
& finish difficulties
& fix text-alignment on label thingy - don't force it on everything
change "update" to "paint"

# Optional
# --------------------------------------
CSS countdown timer or something? Do that interval timeout thing

add inheritance to the objects so I can have gamearea, x, y on everything?
	then label with text
		then timer with overridden update method
	same with player/elf I think

add a pause button?

consider letting them choose parameters:
	# of elves
	speed of them
	speed of you
	add/take away from color options (keep it random)

# =============================================================================

Make initial x/y coords for player consider the pixel size of the player character, just like the elf stuff does
	it's not perfectly centered because it doesn't consider the width/height of the player

Figure out how the sprite sheet/movableCharacter update code should work - I want to tell the elf what entity it should be, and then that's it - I want it to know how to handle the rest. Same thing for the sprite sheet - I want to tell it a filepath, then give it the image dimensions, then I guess tell it the orientation orders and entity names for the columns, then it's really easy for everyone to know exactly how to use it from there

